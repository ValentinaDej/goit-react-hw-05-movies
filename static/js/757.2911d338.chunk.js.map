{"version":3,"file":"static/js/757.2911d338.chunk.js","mappings":"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","sources":["modules/FilmsList/FilmsList.jsx","modules/FilmSearchForm/FilmSearchForm.jsx","pages/Movies/Movies.jsx","shared/Services/filmApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst FilmsList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => {\n    return (\n      <li key={id}>\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul>{elements}</ul>;\n};\n\nexport default FilmsList;\n\nFilmsList.defaultProps = {\n  items: [],\n};\n","import { useState } from 'react';\n\nconst FilmSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ search: '' });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ search: '' });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={state.search}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"input text...\"\n        name=\"search\"\n        required\n      />\n      <button>Find</button>\n    </form>\n  );\n};\n\nexport default FilmSearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport FilmSearchForm from 'modules/FilmSearchForm/FilmSearchForm';\nimport FilmsList from 'modules/FilmsList/FilmsList';\nimport { getFilmByKeyWords } from '../../shared/Services/filmApi';\n\nconst Movies = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearhParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setState(prevState => ({ ...prevState, loading: true }));\n        const data = await getFilmByKeyWords(search);\n        setState(prevState => ({ ...prevState, items: data }));\n      } catch (error) {\n        setState(prevState => ({ ...prevState, error }));\n      } finally {\n        setState(prevState => ({ ...prevState, loading: false }));\n      }\n    };\n\n    if (search) {\n      fetchFilms();\n    }\n  }, [search]);\n\n  const changeSearch = ({ search }) => {\n    setSearhParams({ search });\n  };\n\n  const { items } = state;\n  return (\n    <div>\n      Search Movies page\n      <FilmSearchForm onSubmit={changeSearch} />\n      {items.length > 0 && <FilmsList items={items} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async query => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["FilmsList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","onSubmit","useState","search","setState","e","preventDefault","value","onChange","target","name","type","placeholder","required","loading","error","useSearchParams","searchParams","setSearhParams","get","useEffect","fetchFilms","prevState","getFilmByKeyWords","data","length","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","results","getFilmById","getFilmCreditsById","cast","getFilmReviewsById","query"],"sourceRoot":""}
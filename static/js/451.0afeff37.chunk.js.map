{"version":3,"file":"static/js/451.0afeff37.chunk.js","mappings":"uLACA,MAAyB,uB,kBCgBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,2HCoCD,UA5C2B,WACzB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAW,GAFI,UAGMO,EAAAA,EAAAA,IAAmBJ,GAHzB,OAGTK,EAHS,OAIfV,GAAc,OAAIU,IAJH,gDAMfN,EAAS,KAAMO,SANA,yBAQfT,GAAW,GARI,4EAAH,qDAYhBM,GACD,GAAE,CAACH,EAASL,EAAeE,EAAYE,IAExC,IAAMQ,EAAWb,EAAWc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7C,OACE,2BACE,0BAAOD,KACP,0BAAOC,MAFAF,EAKZ,IAED,OACE,+BACGF,EAASK,OAAS,GACjB,+BAAOL,MAEP,sDAEDX,IAAW,SAAC,UAAD,IACXE,IAAS,iDAGf,C,sLC/CKe,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACfP,EAASQ,IAAI,qBAAsB,CACpDL,OAAQ,CACNE,QAAAA,EACAE,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBC,EAAW,mCAAG,WAAMf,GAAN,uFACNI,EAASQ,IAAT,gBAAsBZ,GAAM,CAC7CO,OAAQ,CACNE,QAAAA,KAHqB,cACnBI,EADmB,yBAMlBA,EAAKA,MANa,2CAAH,sDASXG,EAAkB,mCAAG,WAAMhB,GAAN,uFACbI,EAASQ,IAAT,gBAAsBZ,EAAtB,YAAoC,CACrDO,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKI,MANe,2CAAH,sDASlBtB,EAAkB,mCAAG,WAAMK,GAAN,uFACbI,EAASQ,IAAT,gBAAsBZ,EAAtB,YAAoC,CACrDO,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKC,SANe,2CAAH,sDASlBI,EAAiB,mCAAG,WAAOC,GAAP,4FAAcR,EAAd,+BAAqB,EAArB,SACZP,EAASQ,IAAT,eAA6B,CAC9CL,OAAQ,CACNE,QAAAA,EACAU,MAAAA,EACAR,KAAAA,KAL2B,cACzBE,EADyB,yBAQxBA,EAAKA,KAAKC,SARc,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Loader/Loader.module.css?11fd","modules/Loader/Loader.jsx","pages/MovieDetailsReview/MovieDetailsReview.jsx","shared/services/filmsApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__9SHmr\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getFilmReviewsById } from '../../shared/services/filmsApi';\nimport Loader from 'modules/Loader/Loader';\n\nconst MovieDetailsReview = () => {\n  const [filmReview, setFilmReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const result = await getFilmReviewsById(movieId);\n        setFilmReview([...result]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, setFilmReview, setLoading, setError]);\n\n  const elements = filmReview.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <span>{author}</span>\n        <span>{content}</span>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {elements.length > 0 ? (\n        <div> {elements}</div>\n      ) : (\n        <div>We dont have any reviews</div>\n      )}\n      {loading && <Loader />}\n      {error && <p>...films load faild</p>}\n    </section>\n  );\n};\n\nexport default MovieDetailsReview;\n\nMovieDetailsReview.propTypes = {\n  getClassName: PropTypes.func,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async (query, page = 1) => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n      page,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","useState","filmReview","setFilmReview","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchFilms","getFilmReviewsById","result","message","elements","map","id","author","content","length","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmById","getFilmCreditsById","cast","getFilmByKeyWords","query"],"sourceRoot":""}
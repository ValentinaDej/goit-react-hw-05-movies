{"version":3,"file":"static/js/844.3d7141ad.chunk.js","mappings":"uLACA,MAAyB,uB,kBCgBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,iKCsBD,EA9Bc,WACZ,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfJ,GAAW,GAFI,UAGMK,EAAAA,EAAAA,MAHN,OAGTC,EAHS,OAIfR,GAAS,OAAIQ,IAJE,gDAMfJ,EAAS,KAAMK,SANA,yBAQfP,GAAW,GARI,4EAAH,qDAYhBI,GACD,GAAE,CAACN,EAAUE,EAAYE,KAGxB,2BACGL,EAAMW,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWZ,MAAOA,IACtCE,IAAW,SAACW,EAAA,QAAD,IACXT,IAAS,iDAGf,EClCD,EAAwB,wBCWxB,EATiB,WACf,OACE,iCACE,eAAIZ,UAAWC,EAAf,6BACA,SAAC,EAAD,MAGL,C,2ECTD,EAA4B,4B,SCItBmB,EAAY,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACbc,GAAWC,EAAAA,EAAAA,MACXC,EAAWhB,EAAMiB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChC,OACE,eAAa3B,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAM2B,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EAMZ,IAED,OAAO,wBAAKF,GACb,EAED,IAEAJ,EAAUW,aAAe,CACvBvB,MAAO,G,sLCrBHwB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHrB,EAAoB,mCAAG,yGAAOsB,EAAP,+BAAc,EAAd,SACfN,EAASO,IAAI,qBAAsB,CACpDJ,OAAQ,CACNE,QAAAA,EACAC,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBC,EAAW,mCAAG,WAAMhB,GAAN,uFACNM,EAASO,IAAT,gBAAsBb,GAAM,CAC7CS,OAAQ,CACNE,QAAAA,KAHqB,cACnBG,EADmB,yBAMlBA,EAAKA,MANa,2CAAH,sDASXG,EAAkB,mCAAG,WAAMjB,GAAN,uFACbM,EAASO,IAAT,gBAAsBb,EAAtB,YAAoC,CACrDS,OAAQ,CACNE,QAAAA,KAH4B,cAC1BG,EAD0B,yBAMzBA,EAAKA,KAAKI,MANe,2CAAH,sDASlBC,EAAkB,mCAAG,WAAMnB,GAAN,uFACbM,EAASO,IAAT,gBAAsBb,EAAtB,YAAoC,CACrDS,OAAQ,CACNE,QAAAA,KAH4B,cAC1BG,EAD0B,yBAMzBA,EAAKA,KAAKC,SANe,2CAAH,sDASlBK,EAAiB,mCAAG,WAAOC,GAAP,4FAAcT,EAAd,+BAAqB,EAArB,SACZN,EAASO,IAAT,eAA6B,CAC9CJ,OAAQ,CACNE,QAAAA,EACAU,MAAAA,EACAT,KAAAA,KAL2B,cACzBE,EADyB,yBAQxBA,EAAKA,KAAKC,SARc,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Loader/Loader.module.css?11fd","modules/Loader/Loader.jsx","modules/Films/Films.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","webpack://react-homework-template/./src/shared/components/FilmsList/FilmList.module.css?bbf8","shared/components/FilmsList/FilmsList.jsx","shared/services/filmsApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__9SHmr\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getDailyPopularFilms } from '../../shared/services/filmsApi';\nimport FilmsList from 'shared/components/FilmsList/FilmsList';\nimport Loader from 'modules/Loader/Loader';\n\nconst Films = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const result = await getDailyPopularFilms();\n        setItems([...result]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, [setItems, setLoading, setError]);\n\n  return (\n    <div>\n      {items.length > 0 && <FilmsList items={items} />}\n      {loading && <Loader />}\n      {error && <p>...films load faild</p>}\n    </div>\n  );\n};\n\nexport default Films;\n\nFilms.propTypes = {\n  items: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import Films from 'modules/Films/Films';\nimport css from './HomePage.module.css';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h2 className={css.title}>Trending today</h2>\n      <Films />\n    </>\n  );\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"filmsList\":\"FilmList_filmsList__ipTM-\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './FilmList.module.css';\n\nconst FilmsList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => {\n    return (\n      <li key={id} className={css.filmsList}>\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul>{elements}</ul>;\n};\n\nexport default FilmsList;\n\nFilmsList.defaultProps = {\n  items: [],\n};\n\nFilmsList.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async (query, page = 1) => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n      page,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","useState","items","setItems","loading","setLoading","error","setError","useEffect","fetchFilms","getDailyPopularFilms","result","message","length","FilmsList","Loader","location","useLocation","elements","map","id","title","state","from","to","defaultProps","instance","axios","baseURL","params","language","api_key","page","get","data","results","getFilmById","getFilmCreditsById","cast","getFilmReviewsById","getFilmByKeyWords","query"],"sourceRoot":""}
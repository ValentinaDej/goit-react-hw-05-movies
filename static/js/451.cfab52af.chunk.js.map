{"version":3,"file":"static/js/451.cfab52af.chunk.js","mappings":"2OAwEA,UAnE2B,WACzB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBJ,GAAS,kBACJD,GADG,IAENF,SAAS,EACTC,MAAO,QAJQ,mBAQMO,EAAAA,EAAAA,IAAmBJ,GARzB,OAQTK,EARS,OASfN,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEEX,OAAM,OAAKU,IAEd,IAdc,gDAgBfN,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEET,MAAK,MAER,IArBc,yBAuBfE,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEEV,SAAS,GAEZ,IA5Bc,4EAAH,qDAgChBO,GACD,GAAE,CAACH,EAASF,IAEb,IAEMS,EAFYT,EAAVH,MAEea,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxC,OACE,2BACE,0BAAOD,KACP,0BAAOC,MAFAF,EAKZ,IAED,OACE,6BACGF,EAASK,OAAS,GACjB,+BAAOL,MAEP,uDAIP,C,sLCpEKM,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACfP,EAASQ,IAAI,qBAAsB,CACpDL,OAAQ,CACNE,QAAAA,EACAE,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBC,EAAW,mCAAG,WAAMf,GAAN,uFACNI,EAASQ,IAAT,gBAAsBZ,GAAM,CAC7CO,OAAQ,CACNE,QAAAA,KAHqB,cACnBI,EADmB,yBAQlBA,EAAKA,MARa,2CAAH,sDAWXG,EAAkB,mCAAG,WAAMhB,GAAN,uFACbI,EAASQ,IAAT,gBAAsBZ,EAAtB,YAAoC,CACrDO,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAQzBA,EAAKA,KAAKI,MARe,2CAAH,sDAWlBtB,EAAkB,mCAAG,WAAMK,GAAN,uFACbI,EAASQ,IAAT,gBAAsBZ,EAAtB,YAAoC,CACrDO,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,OAOhCK,QAAQC,IAAIN,EAAKA,KAAKC,SAPU,kBAQzBD,EAAKA,KAAKC,SARe,2CAAH,sDAWlBM,EAAiB,mCAAG,WAAMC,GAAN,uFACZjB,EAASQ,IAAT,eAA6B,CAC9CL,OAAQ,CACNE,QAAAA,EACAY,MAAAA,KAJ2B,cACzBR,EADyB,yBASxBA,EAAKA,KAAKC,SATc,2CAAH,qD","sources":["pages/MovieDetailsReview/MovieDetailsReview.jsx","shared/Services/filmApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getFilmReviewsById } from '../../shared/Services/filmApi';\n\nconst MovieDetailsReview = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      setState({\n        ...state,\n        loading: true,\n        error: null,\n      });\n\n      try {\n        const result = await getFilmReviewsById(movieId);\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: [...result],\n          };\n        });\n      } catch (error) {\n        setState(prevState => {\n          return {\n            ...prevState,\n            error,\n          };\n        });\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, state]);\n\n  const { items } = state;\n\n  const elements = items.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <span>{author}</span>\n        <span>{content}</span>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {elements.length > 0 ? (\n        <div> {elements}</div>\n      ) : (\n        <div>We dont have any reviews</div>\n      )}\n    </section>\n  );\n};\n\nexport default MovieDetailsReview;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n\n  // console.log(data.data);\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n\n  //console.log(data.data.cast);\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n\n  console.log(data.data.results);\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async query => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n    },\n  });\n\n  // console.log(data.data.results);\n  return data.data.results;\n};\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchFilms","getFilmReviewsById","result","prevState","elements","map","id","author","content","length","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmById","getFilmCreditsById","cast","console","log","getFilmByKeyWords","query"],"sourceRoot":""}
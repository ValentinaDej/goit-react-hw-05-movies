{"version":3,"file":"static/js/135.79f36fd3.chunk.js","mappings":"wLACA,MAAyB,uB,mBCgBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,iKCdD,EAA8B,kCAA9B,EAA4E,gCAA5E,EAAuH,+BAAvH,EAAwK,sCAAxK,EAA2N,iCAA3N,EAAgR,wCAAhR,EAA6U,yCAA7U,EAAkZ,gDAAlZ,EAA4c,8B,SC+F5c,EAlFqB,WAAO,IAAD,EACzB,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfR,GAAW,GAFI,UAGMS,EAAAA,EAAAA,IAAYN,GAHlB,OAGTO,EAHS,OAIfZ,EAAQY,GAJO,gDAMfR,EAAS,KAAMS,SANA,yBAQfX,GAAW,GARI,4EAAH,qDAYhBQ,GACD,GAAE,CAACL,EAASL,EAASE,EAAYE,IAElC,IACMU,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAGrC,GAAIf,EAAM,CACR,IAAQkB,EAAuDlB,EAAvDkB,MAAOC,EAAgDnB,EAAhDmB,SAAUC,EAAsCpB,EAAtCoB,aAAcC,EAAwBrB,EAAxBqB,OAAQC,EAAgBtB,EAAhBsB,YACzCC,EAAOC,KAAKC,MAAqB,GAAfL,GAElBM,EAAiBL,EAAOM,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvC,OACE,eAAarC,UAAWC,EAAxB,SACGoC,GADMD,EAIZ,IAED,OACE,qBAASpC,UAAWC,EAApB,WACE,mBAAQqC,QAhBC,kBAAMtB,EAASO,EAAf,EAgBgBvB,UAAWC,EAApC,6BAGA,iBAAKD,UAAWC,EAAhB,WACE,yBACG6B,GACC,gBACES,IAAG,8CAAyCT,GAC5CU,IAAKd,EACLrB,MAAM,WAGR,gBAAKL,UAAWC,EAAhB,kCAGJ,iBAAKD,UAAWC,EAAhB,WACE,wBAAKyB,KACL,wCAAgBK,EAAhB,QACA,sCACA,uBAAIJ,KACJ,oCACA,eAAI3B,UAAWC,EAAf,SAAgCiC,WAGpC,iBAAKlC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMwB,MAAO,CAAEF,KAAAA,GAAQkB,GAAE,kBAAa3B,EAAb,SAAzB,UACE,gBAAKd,UAAWC,EAAhB,qBAEF,SAAC,KAAD,CAAMwB,MAAO,CAAEF,KAAAA,GAAQkB,GAAE,kBAAa3B,EAAb,YAAzB,UACE,gBAAKd,UAAWC,EAAhB,2BAGJ,SAAC,KAAD,IACCS,IAAW,SAACgC,EAAA,QAAD,IACX9B,IAAS,iDAGf,CACF,C,yLC5FK+B,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACfP,EAASQ,IAAI,qBAAsB,CACpDL,OAAQ,CACNE,QAAAA,EACAE,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBjC,EAAW,mCAAG,WAAMgB,GAAN,uFACNO,EAASQ,IAAT,gBAAsBf,GAAM,CAC7CU,OAAQ,CACNE,QAAAA,KAHqB,cACnBI,EADmB,yBAMlBA,EAAKA,MANa,2CAAH,sDASXE,EAAkB,mCAAG,WAAMlB,GAAN,uFACbO,EAASQ,IAAT,gBAAsBf,EAAtB,YAAoC,CACrDU,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKG,MANe,2CAAH,sDASlBC,EAAkB,mCAAG,WAAMpB,GAAN,uFACbO,EAASQ,IAAT,gBAAsBf,EAAtB,YAAoC,CACrDU,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKC,SANe,2CAAH,sDASlBI,EAAiB,mCAAG,WAAOC,GAAP,4FAAcR,EAAd,+BAAqB,EAArB,SACZP,EAASQ,IAAT,eAA6B,CAC9CL,OAAQ,CACNE,QAAAA,EACAU,MAAAA,EACAR,KAAAA,KAL2B,cACzBE,EADyB,yBAQxBA,EAAKA,KAAKC,SARc,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/Loader/Loader.module.css?11fd","modules/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","shared/services/filmsApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__9SHmr\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"filmSection\":\"MovieDetails_filmSection__k3Rr2\",\"goBackBtn\":\"MovieDetails_goBackBtn__WL+X0\",\"filmInfo\":\"MovieDetails_filmInfo__uxvgh\",\"filmInfoDetails\":\"MovieDetails_filmInfoDetails__FBvjU\",\"filmGenres\":\"MovieDetails_filmGenres__E+Rgj\",\"filmGenresElement\":\"MovieDetails_filmGenresElement__uKTOb\",\"filmIAdditionalnfo\":\"MovieDetails_filmIAdditionalnfo__-Q-XK\",\"filmIAdditionalnfoElement\":\"MovieDetails_filmIAdditionalnfoElement__jea0D\",\"noImage\":\"MovieDetails_noImage__MlcpS\"};","import {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getFilmById } from '../../shared/services/filmsApi';\nimport Loader from 'modules/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const result = await getFilmById(movieId);\n        setFilm(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, setFilm, setLoading, setError]);\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  if (film) {\n    const { title, overview, vote_average, genres, poster_path } = film;\n    const vote = Math.round(vote_average * 10);\n\n    const genresElemetns = genres.map(({ id, name }) => {\n      return (\n        <li key={id} className={css.filmGenresElement}>\n          {name}\n        </li>\n      );\n    });\n\n    return (\n      <section className={css.filmSection}>\n        <button onClick={goBack} className={css.goBackBtn}>\n          â‡  Go back\n        </button>\n        <div className={css.filmInfo}>\n          <div>\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n                alt={title}\n                width=\"200px\"\n              />\n            ) : (\n              <div className={css.noImage}>Opps... no poster</div>\n            )}\n          </div>\n          <div className={css.filmInfoDetails}>\n            <h2>{title}</h2>\n            <p>User Score: {vote}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul className={css.filmGenres}>{genresElemetns}</ul>\n          </div>\n        </div>\n        <div className={css.filmIAdditionalnfo}>\n          <Link state={{ from }} to={`/movies/${movieId}/cast`}>\n            <div className={css.filmIAdditionalnfoElement}>Cast</div>\n          </Link>\n          <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\n            <div className={css.filmIAdditionalnfoElement}>Reviews</div>\n          </Link>\n        </div>\n        <Outlet />\n        {loading && <Loader />}\n        {error && <p>...films load faild</p>}\n      </section>\n    );\n  }\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  goBack: PropTypes.func,\n  imgUrl: PropTypes.string,\n  title: PropTypes.string,\n  vote: PropTypes.string,\n  from: PropTypes.string,\n  movieId: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async (query, page = 1) => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n      page,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","useState","film","setFilm","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","useEffect","fetchFilms","getFilmById","result","message","from","useLocation","state","title","overview","vote_average","genres","poster_path","vote","Math","round","genresElemetns","map","id","name","onClick","src","alt","to","Loader","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmCreditsById","cast","getFilmReviewsById","getFilmByKeyWords","query"],"sourceRoot":""}
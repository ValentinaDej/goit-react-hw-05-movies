{"version":3,"file":"static/js/961.178f1d82.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","shared/Services/filmApi.js"],"sourcesContent":["import {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getFilmById } from '../../shared/Services/filmApi';\n\nconst MovieDetails = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      setState({\n        ...state,\n        loading: true,\n        error: null,\n      });\n\n      try {\n        const result = await getFilmById(movieId);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => {\n          return {\n            ...prevState,\n            error,\n          };\n        });\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, state]);\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  const { title, overview, vote_average, genres, poster_path } = state.item;\n\n  const vote = Math.round(vote_average * 10);\n\n  const genresElemetns = genres?.map(({ id, name }) => {\n    return <li key={id}>{name}</li>;\n  });\n\n  const imgUrl = poster_path\n    ? `https://image.tmdb.org/t/p/original/${poster_path}`\n    : '';\n\n  return (\n    <>\n      <button onClick={goBack}> Go back</button>\n      <div>\n        <img src={imgUrl} alt={title} width=\"200px\" />\n        <p>{title}</p>\n        <p>{vote}%</p>\n        <p>{overview}</p>\n        <ul>{genresElemetns}</ul>\n        <Link state={{ from }} to={`/movies/${movieId}/cast`}>\n          <span>Cast</span>\n        </Link>\n        <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\n          <span>Reviews</span>\n        </Link>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async query => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["useState","item","loading","error","state","setState","movieId","useParams","navigate","useNavigate","useEffect","fetchFilms","getFilmById","result","prevState","from","useLocation","title","overview","vote_average","genres","poster_path","vote","Math","round","genresElemetns","map","id","name","imgUrl","onClick","src","alt","width","to","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmCreditsById","cast","getFilmReviewsById","getFilmByKeyWords","query"],"sourceRoot":""}
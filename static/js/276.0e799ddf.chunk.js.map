{"version":3,"file":"static/js/276.0e799ddf.chunk.js","mappings":"2OA8EA,UAzEyB,WACvB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBJ,GAAS,kBACJD,GADG,IAENF,SAAS,EACTC,MAAO,QAJQ,mBAQMO,EAAAA,EAAAA,IAAmBJ,GARzB,OAQTK,EARS,OASfN,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEEX,OAAM,OAAKU,IAEd,IAdc,gDAgBfN,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEET,MAAK,MAER,IArBc,yBAuBfE,GAAS,SAAAO,GACP,OAAO,kBACFA,GADL,IAEEV,SAAS,GAEZ,IA5Bc,4EAAH,qDAgChBO,GACD,GAAE,CAACH,EAASF,IAEb,IAEMS,EAFYT,EAAVH,MAEea,KACrB,YAA0D,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,2BACE,0BAAOF,KACP,0BAAOC,IACNC,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,MANFD,EAWZ,IAGH,OACE,+BACE,0BACE,6BAAUF,OAIjB,C,sLC1EKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACfP,EAASQ,IAAI,qBAAsB,CACpDL,OAAQ,CACNE,QAAAA,EACAE,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBC,EAAW,mCAAG,WAAMC,GAAN,uFACNZ,EAASQ,IAAT,gBAAsBI,GAAM,CAC7CT,OAAQ,CACNE,QAAAA,KAHqB,cACnBI,EADmB,yBAQlBA,EAAKA,MARa,2CAAH,sDAWXpB,EAAkB,mCAAG,WAAMuB,GAAN,uFACbZ,EAASQ,IAAT,gBAAsBI,EAAtB,YAAoC,CACrDT,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAQzBA,EAAKA,KAAKI,MARe,2CAAH,sDAWlBC,EAAkB,mCAAG,WAAMF,GAAN,uFACbZ,EAASQ,IAAT,gBAAsBI,EAAtB,YAAoC,CACrDT,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,OAOhCM,QAAQC,IAAIP,EAAKA,KAAKC,SAPU,kBAQzBD,EAAKA,KAAKC,SARe,2CAAH,sDAWlBO,EAAiB,mCAAG,WAAMC,GAAN,uFACZlB,EAASQ,IAAT,eAA6B,CAC9CL,OAAQ,CACNE,QAAAA,EACAa,MAAAA,KAJ2B,cACzBT,EADyB,yBASxBA,EAAKA,KAAKC,SATc,2CAAH,qD","sources":["pages/MovieDetailsCast/MovieDetailsCast.jsx","shared/Services/filmApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getFilmCreditsById } from '../../shared/Services/filmApi';\n\nconst MovieDetailsCast = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      setState({\n        ...state,\n        loading: true,\n        error: null,\n      });\n\n      try {\n        const result = await getFilmCreditsById(movieId);\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: [...result],\n          };\n        });\n      } catch (error) {\n        setState(prevState => {\n          return {\n            ...prevState,\n            error,\n          };\n        });\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, state]);\n\n  const { items } = state;\n\n  const elements = items.map(\n    ({ cast_id, original_name, character, profile_path }) => {\n      return (\n        <li key={cast_id}>\n          <span>{original_name}</span>\n          <span>{character}</span>\n          {profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n              alt={original_name}\n            />\n          )}\n        </li>\n      );\n    }\n  );\n\n  return (\n    <>\n      <div>\n        <section>{elements}</section>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsCast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n\n  // console.log(data.data);\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n\n  //console.log(data.data.cast);\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n\n  console.log(data.data.results);\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async query => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n    },\n  });\n\n  // console.log(data.data.results);\n  return data.data.results;\n};\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchFilms","getFilmCreditsById","result","prevState","elements","map","cast_id","original_name","character","profile_path","src","alt","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmById","id","cast","getFilmReviewsById","console","log","getFilmByKeyWords","query"],"sourceRoot":""}
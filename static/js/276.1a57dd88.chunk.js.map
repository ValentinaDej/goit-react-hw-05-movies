{"version":3,"file":"static/js/276.1a57dd88.chunk.js","mappings":"kOA2DA,UAtDyB,WACvB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAW,GAFI,UAGMO,EAAAA,EAAAA,IAAmBJ,GAHzB,OAGTK,EAHS,OAIfV,GAAY,OAAIU,IAJD,gDAMfN,EAAS,KAAMO,SANA,yBAQfT,GAAW,GARI,4EAAH,qDAYhBM,GACD,GAAE,CAACH,EAASL,EAAaE,EAAYE,IAEtC,IAAMQ,EAAWb,EAASc,KACxB,YAA0D,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,2BACE,0BAAOF,KACP,0BAAOC,IACNC,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,MANFD,EAWZ,IAGH,OACE,+BACE,2BACGF,EAASQ,OAAS,GACjB,+BAAOR,MAEP,+DAEDX,IAAW,4CACXE,IAAS,mDAIjB,C,sLCvDKkB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,SAAU,WAIRC,EAAU,mCAEHC,EAAoB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACfP,EAASQ,IAAI,qBAAsB,CACpDL,OAAQ,CACNE,QAAAA,EACAE,KAAAA,KAJ8B,cAC5BE,EAD4B,yBAQ3BA,EAAKA,KAAKC,SARiB,2CAAH,qDAWpBC,EAAW,mCAAG,WAAMC,GAAN,uFACNZ,EAASQ,IAAT,gBAAsBI,GAAM,CAC7CT,OAAQ,CACNE,QAAAA,KAHqB,cACnBI,EADmB,yBAMlBA,EAAKA,MANa,2CAAH,sDASXrB,EAAkB,mCAAG,WAAMwB,GAAN,uFACbZ,EAASQ,IAAT,gBAAsBI,EAAtB,YAAoC,CACrDT,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKI,MANe,2CAAH,sDASlBC,EAAkB,mCAAG,WAAMF,GAAN,uFACbZ,EAASQ,IAAT,gBAAsBI,EAAtB,YAAoC,CACrDT,OAAQ,CACNE,QAAAA,KAH4B,cAC1BI,EAD0B,yBAMzBA,EAAKA,KAAKC,SANe,2CAAH,sDASlBK,EAAiB,mCAAG,WAAOC,GAAP,4FAAcT,EAAd,+BAAqB,EAArB,SACZP,EAASQ,IAAT,eAA6B,CAC9CL,OAAQ,CACNE,QAAAA,EACAW,MAAAA,EACAT,KAAAA,KAL2B,cACzBE,EADyB,yBAQxBA,EAAKA,KAAKC,SARc,2CAAH,qD","sources":["pages/MovieDetailsCast/MovieDetailsCast.jsx","shared/Services/filmApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getFilmCreditsById } from '../../shared/Services/filmApi';\n\nconst MovieDetailsCast = () => {\n  const [filmCast, setFilmCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const result = await getFilmCreditsById(movieId);\n        setFilmCast([...result]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilms();\n  }, [movieId, setFilmCast, setLoading, setError]);\n\n  const elements = filmCast.map(\n    ({ cast_id, original_name, character, profile_path }) => {\n      return (\n        <li key={cast_id}>\n          <span>{original_name}</span>\n          <span>{character}</span>\n          {profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n              alt={original_name}\n            />\n          )}\n        </li>\n      );\n    }\n  );\n\n  return (\n    <>\n      <div>\n        {elements.length > 0 ? (\n          <div> {elements}</div>\n        ) : (\n          <div>We dont have any cast information</div>\n        )}\n        {loading && <p>...loading films</p>}\n        {error && <p>...films load faild</p>}\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsCast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async (query, page = 1) => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n      page,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["useState","filmCast","setFilmCast","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchFilms","getFilmCreditsById","result","message","elements","map","cast_id","original_name","character","profile_path","src","alt","length","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","get","data","results","getFilmById","id","cast","getFilmReviewsById","getFilmByKeyWords","query"],"sourceRoot":""}
{"version":3,"file":"static/js/38.48e11b12.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/Loader/Loader.module.css?11fd","modules/Loader/Loader.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/hooks/useForm.js","modules/FilmSearchForm/initialState.js","modules/FilmSearchForm/FilmSearchForm.jsx","pages/Movies/Movies.jsx","shared/components/FilmsList/FilmsList.jsx","shared/services/filmsApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__9SHmr\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"blue\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const initialState = {\n  search: '',\n};\n\nexport default initialState;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\n\nconst FilmSearchForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { search } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={search}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"input text...\"\n        name=\"search\"\n        required\n      />\n      <button>Find</button>\n    </form>\n  );\n};\n\nexport default memo(FilmSearchForm);\n\nFilmSearchForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n  search: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport FilmSearchForm from 'modules/FilmSearchForm/FilmSearchForm';\nimport FilmsList from 'shared/components/FilmsList/FilmsList';\nimport { getFilmByKeyWords } from '../../shared/services/filmsApi';\nimport Loader from 'modules/Loader/Loader';\n\nconst Movies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearhParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const result = await getFilmByKeyWords(search);\n        setItems([...result]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (search) {\n      fetchFilms();\n    }\n  }, [search, setItems, setLoading, setError]);\n\n  const changeSearch = ({ search }) => {\n    setSearhParams({ search });\n  };\n\n  return (\n    <div>\n      Search Movies page\n      <FilmSearchForm onSubmit={changeSearch} />\n      {items.length > 0 && <FilmsList items={items} />}\n      {loading && <Loader />}\n      {error && <p>...films load faild</p>}\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  changeSearch: PropTypes.func,\n  items: PropTypes.array,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst FilmsList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => {\n    return (\n      <li key={id}>\n        <Link state={{ from: location }} to={`/movies/${id}`}>\n          {title}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul>{elements}</ul>;\n};\n\nexport default FilmsList;\n\nFilmsList.defaultProps = {\n  items: [],\n};\n\nFilmsList.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst api_key = '7c4c8eade83a7a9829861e0d1ff26425';\n\nexport const getDailyPopularFilms = async (page = 1) => {\n  const data = await instance.get('trending/movie/day', {\n    params: {\n      api_key,\n      page,\n    },\n  });\n\n  return data.data.results;\n};\n\nexport const getFilmById = async id => {\n  const data = await instance.get(`movie/${id}`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data;\n};\n\nexport const getFilmCreditsById = async id => {\n  const data = await instance.get(`movie/${id}/credits`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.cast;\n};\n\nexport const getFilmReviewsById = async id => {\n  const data = await instance.get(`movie/${id}/reviews`, {\n    params: {\n      api_key,\n    },\n  });\n  return data.data.results;\n};\n\nexport const getFilmByKeyWords = async (query, page = 1) => {\n  const data = await instance.get(`search/movie`, {\n    params: {\n      api_key,\n      query,\n      page,\n    },\n  });\n  return data.data.results;\n};\n"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","initialState","onSubmit","useState","state","setState","handleChange","name","prevState","handleSubmit","e","preventDefault","search","FilmSearchForm","useForm","onChange","type","placeholder","required","memo","items","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearhParams","get","useEffect","fetchFilms","getFilmByKeyWords","result","message","FilmsList","Loader","location","useLocation","elements","map","id","title","from","to","defaultProps","instance","axios","baseURL","params","language","api_key","getDailyPopularFilms","page","data","results","getFilmById","getFilmCreditsById","cast","getFilmReviewsById","query"],"sourceRoot":""}